(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["fibridge"] = factory();
	else
		root["fibridge"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/omnistreams-filereader/index.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/omnistreams-filereader/index.mjs ***!
  \*******************************************************/
/*! exports provided: FileReadProducer */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"FileReadProducer\", function() { return FileReadProducer; });\n/* harmony import */ var omnistreams__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! omnistreams */ \"./node_modules/omnistreams/index.mjs\");\n\n\n// Implementation is based off of this one:\n// https://gist.github.com/alediaferia/cfb3a7503039f9278381\nclass FileReadProducer extends omnistreams__WEBPACK_IMPORTED_MODULE_0__[\"Producer\"] {\n\n  constructor(file, options) {\n    super()\n\n    const opts = options ? options : {}\n\n    this._file = file\n    this._offset = 0\n    this._chunkSize = opts.chunkSize ? opts.chunkSize : 1024*1024\n    this._paused = true \n    this._stop = false\n  }\n\n  _demandChanged() {\n    if (this._paused) {\n      this._readChunk()\n    }\n  }\n\n  _readChunk() {\n\n    if (this._stop) {\n      return\n    }\n\n    if (this._offset < this._file.size) {\n\n      this._paused = false\n\n      const reader = new FileReader()\n\n      reader.onload = (event) => {\n        if (this._stop) {\n          return\n        }\n\n        const data = new Uint8Array(event.target.result)\n\n        this._dataCallback(data)\n\n        this._demand--\n        this._offset += data.byteLength\n\n        if (this._demand > 0) {\n          this._readChunk()\n        }\n        else {\n          this._paused = true\n        }\n\n        if (this._offset >= this._file.size) {\n          //console.log(\"end file stream: \" + this.id)\n          this._endCallback()\n        }\n      }\n\n      const slice = this._file.slice(this._offset, this._offset + this._chunkSize)\n      reader.readAsArrayBuffer(slice)\n      //reader.readAsText(slice)\n    }\n  }\n\n  _terminate() {\n    this._stop = true\n  }\n}\n\n\n//# sourceURL=webpack://fibridge/./node_modules/omnistreams-filereader/index.mjs?");

/***/ }),

/***/ "./node_modules/omnistreams/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/omnistreams/index.mjs ***!
  \********************************************/
/*! exports provided: Multiplexer, Producer, Consumer, initiateWebSocketMux, encodeObject, decodeObject */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeObject\", function() { return encodeObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeObject\", function() { return decodeObject; });\n/* harmony import */ var _src_multiplexer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/multiplexer.mjs */ \"./node_modules/omnistreams/src/multiplexer.mjs\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Multiplexer\", function() { return _src_multiplexer_mjs__WEBPACK_IMPORTED_MODULE_0__[\"Multiplexer\"]; });\n\n/* harmony import */ var _src_core_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./src/core.mjs */ \"./node_modules/omnistreams/src/core.mjs\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Producer\", function() { return _src_core_mjs__WEBPACK_IMPORTED_MODULE_1__[\"Producer\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Consumer\", function() { return _src_core_mjs__WEBPACK_IMPORTED_MODULE_1__[\"Consumer\"]; });\n\n/* harmony import */ var _src_transport_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/transport.mjs */ \"./node_modules/omnistreams/src/transport.mjs\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"initiateWebSocketMux\", function() { return _src_transport_mjs__WEBPACK_IMPORTED_MODULE_2__[\"initiateWebSocketMux\"]; });\n\nfunction encodeObject(obj) {\n  const enc = new TextEncoder();\n  return enc.encode(JSON.stringify(obj));\n}\n\nfunction decodeObject(array) {\n  return JSON.parse(String.fromCharCode.apply(null, new Uint8Array(array)));\n}\n\n\n\n\n\n\n\n//# sourceURL=webpack://fibridge/./node_modules/omnistreams/index.mjs?");

/***/ }),

/***/ "./node_modules/omnistreams/src/core.mjs":
/*!***********************************************!*\
  !*** ./node_modules/omnistreams/src/core.mjs ***!
  \***********************************************/
/*! exports provided: Consumer, Producer */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Consumer\", function() { return Consumer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Producer\", function() { return Producer; });\nclass Streamer {\n  constructor() {\n    this._terminateCallback = () => {}\n    this._terminated = false\n  }\n\n  terminate() {\n    if (!this._terminated) {\n      this._terminated = true\n      this._terminate()\n      this._terminateCallback()\n    }\n  }\n\n  onError(callback) {\n    this._errorCallback = callback\n  }\n\n  onTermination(callback) {\n    this._terminateCallback = callback\n  }\n\n  _terminate() {\n    throw \"_terminate must be implemented\"\n  }\n}\n\nclass Producer extends Streamer {\n  constructor() {\n    super()\n    this._demand = 0\n    this._dataCallback = () => {}\n    this._endCallback = () => {}\n  }\n\n  request(numElements) {\n    this._demand += numElements\n    this._demandChanged(numElements)\n  }\n\n  pipe(consumer) {\n\n    this._pipee = consumer\n\n    this.onData((data) => {\n      consumer.write(data)\n    })\n\n    this.onEnd(() => {\n      consumer.end()\n    })\n\n    consumer.onRequest((numElements) => {\n      this.request(numElements)\n    })\n\n    consumer.onTermination(() => {\n      this.terminate()\n    })\n\n    // If the consumer is also a Conduit, this will make continued piping\n    // more ergonomic\n    return consumer\n  }\n\n  onData(callback) {\n    this._dataCallback = callback\n  }\n\n  onEnd(callback) {\n    this._endCallback = callback\n  }\n\n  terminate() {\n    super.terminate()\n\n    if (this._pipee) {\n      this._pipee.terminate()\n    }\n  }\n\n  _demandChanged() {\n    throw \"_demandChanged must be implemented\"\n  }\n}\n\n\nclass Consumer extends Streamer {\n  constructor(options) {\n    super()\n\n    const opts = options ? options : {}\n\n    this._endCallback = () => {}\n    this._requestCallback = () => {}\n  }\n\n  write(data) {\n    this._write(data)\n  }\n\n  end() {\n\n    this.write = () => {\n      throw new Error(\"Consumer: Attempt to call write after calling end\")\n    }\n\n    this._ended = true\n    this._end()\n  }\n\n  // override\n  terminate() {\n    super.terminate()\n\n    this.write = () => {\n      throw new Error(\"Consumer: Attempt to call write after calling terminate\")\n    }\n  }\n\n  onRequest(callback) {\n    this._requestCallback = (numElements) => {\n      if (!this._ended) {\n        callback(numElements)\n      }\n    }\n  }\n\n  onFinish(callback) {\n    this._finishCallback = callback\n  }\n\n  _write() {\n    throw \"_write must be implemented\"\n  }\n\n  _end() {\n    throw \"_end must be implemented\"\n  }\n}\n\n\n\n\n//# sourceURL=webpack://fibridge/./node_modules/omnistreams/src/core.mjs?");

/***/ }),

/***/ "./node_modules/omnistreams/src/multiplexer.mjs":
/*!******************************************************!*\
  !*** ./node_modules/omnistreams/src/multiplexer.mjs ***!
  \******************************************************/
/*! exports provided: Multiplexer */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Multiplexer\", function() { return Multiplexer; });\n/* harmony import */ var _mux_receiver_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mux_receiver.mjs */ \"./node_modules/omnistreams/src/mux_receiver.mjs\");\n/* harmony import */ var _mux_sender_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mux_sender.mjs */ \"./node_modules/omnistreams/src/mux_sender.mjs\");\n\n\n\n\nconst MESSAGE_TYPE_CREATE_RECEIVER = 0\nconst MESSAGE_TYPE_STREAM_DATA = 1\nconst MESSAGE_TYPE_STREAM_END = 2\nconst MESSAGE_TYPE_TERMINATE_SENDER = 3\nconst MESSAGE_TYPE_STREAM_REQUEST_DATA = 4\nconst MESSAGE_TYPE_CONTROL_MESSAGE = 5\n\n\nclass Multiplexer {\n  constructor(transport) {\n\n    if (transport) {\n      this.setSendHandler((message) => {\n        transport.send(message)\n      })\n\n      transport.onMessage((message) => {\n        this.handleMessage(message)\n      });\n    }\n\n    this._senders = {}\n    this._receivers = {}\n    this._availableStreamIds = []\n    for (let i = 0; i < 256; i++) {\n      this._availableStreamIds.push(i)\n    }\n\n    this._onConduitCallback = () => {}\n  }\n\n  onControlMessage(callback) {\n    this._controlMessageCallback = callback\n  }\n\n  sendControlMessage(controlMessage) {\n    const message = new Uint8Array(1 + controlMessage.byteLength)\n    message[0] = MESSAGE_TYPE_CONTROL_MESSAGE\n    message.set(controlMessage, 1) \n    this._send(message)\n  }\n\n  handleMessage(rawMessage) {\n\n    const byteMessage = new Uint8Array(rawMessage)\n    const message = {}\n\n    message.type = byteMessage[0]\n\n    if (message.type === MESSAGE_TYPE_CONTROL_MESSAGE) {\n      const controlMessage = new Uint8Array(byteMessage.buffer, 1)\n      this._controlMessageCallback(controlMessage)\n    }\n    else {\n\n      message.streamId = byteMessage[1]\n\n      if (byteMessage.length > 2) {\n        message.data = new Uint8Array(byteMessage.buffer, 2)\n      }\n\n      switch (message.type) {\n        case MESSAGE_TYPE_CREATE_RECEIVER: {\n          \n          const producer = this._makeReceiver(message.streamId)\n\n          this._receivers[message.streamId] = producer\n\n          const metadata = message.data\n\n          this._onConduitCallback(producer, metadata)\n\n          break;\n        }\n        case MESSAGE_TYPE_STREAM_DATA: {\n\n          const receiver = this._receivers[message.streamId]\n          if (receiver) {\n            receiver.receive(message.data)\n          }\n          else {\n            console.error(\"Invalid stream id: \" + message.streamId)\n          }\n\n          break;\n        }\n        case MESSAGE_TYPE_STREAM_END: {\n          const receiver = this._receivers[message.streamId]\n          receiver.stop()\n          delete this._receivers[message.streamId]\n          break;\n        }\n        case MESSAGE_TYPE_TERMINATE_SENDER: {\n          const sender = this._senders[message.streamId]\n          sender.terminate()\n          break;\n        }\n        case MESSAGE_TYPE_STREAM_REQUEST_DATA: {\n          const elementRequested = message.data[0]\n\n          const sender = this._senders[message.streamId]\n          if (sender) {\n            sender._requestCallback(elementRequested)\n          }\n          break;\n        }\n        default: {\n          console.error(\"Unsupported message type: \" + message.type)\n          break;\n        }\n      }\n    }\n  }\n\n  setSendHandler(handler) {\n    this._send = handler\n  }\n\n  onConduit(callback) {\n    this._onConduitCallback = callback\n  }\n\n  createConduit(metadata) {\n    const id = this.nextStreamId()\n    if (id !== null) {\n      const sender = this._makeSender(id)\n      this._senders[id] = sender\n      this._signalCreateConduit(id, metadata)\n      return sender\n    }\n    else {\n      return null\n    }\n  }\n\n  getConsumers() {\n    return Object.keys(this._senders)\n      .map(key => this._senders[key])\n  }\n\n  getProducers() {\n    return Object.keys(this._receivers)\n      .map(key => this._receivers[key])\n  }\n\n  _makeSender(id) {\n    const sendFunc = (data) => {\n      this._streamSend(id, data)\n    }\n\n    const endFunc = () => {\n      const message = new Uint8Array(2)\n      message[0] = MESSAGE_TYPE_STREAM_END\n      message[1] = id \n      this._send(message)\n      this._removeSender(id)\n    }\n\n    const terminateFunc = () => {\n      this._terminateSender(id)\n      this._removeSender(id)\n    }\n\n    const sender = new _mux_sender_mjs__WEBPACK_IMPORTED_MODULE_1__[\"MuxSender\"]({ sendFunc, endFunc, terminateFunc })\n    return sender\n  }\n\n  _removeSender(id) {\n    const consumer = this._senders[id]\n    delete this._senders[id]\n    this._availableStreamIds.push(id)\n  }\n\n  _makeReceiver(id) {\n\n    const requestFunc = (numElements) => {\n      const message = new Uint8Array(3)\n      message[0] = MESSAGE_TYPE_STREAM_REQUEST_DATA\n      message[1] = id \n      message[2] = numElements\n      this._send(message)\n    }\n\n    const terminateFunc = () => {\n      this._terminateReceiver(id)\n    }\n\n    const receiver = new _mux_receiver_mjs__WEBPACK_IMPORTED_MODULE_0__[\"MuxReceiver\"]({ requestFunc, terminateFunc })\n    return receiver \n  }\n\n  nextStreamId() {\n    //console.log(JSON.stringify(this._availableStreamIds))\n    if (this._availableStreamIds.length > 0) {\n      const id = this._availableStreamIds.shift()\n      return id\n    }\n    else {\n      return null\n    }\n  }\n\n  _signalCreateConduit(streamId, metadata) {\n\n    const signallingLength = 2\n\n    let message\n\n    if (metadata) {\n      message = new Uint8Array(signallingLength + metadata.byteLength)\n      message.set(metadata, signallingLength)\n    }\n    else {\n      message = new Uint8Array(signallingLength)\n    }\n\n    message[0] = MESSAGE_TYPE_CREATE_RECEIVER\n    message[1] = streamId\n    \n    this._send(message)\n  }\n\n  _streamSend(streamId, data) {\n    \n    const signallingLength = 2\n    const message = new Uint8Array(signallingLength + data.byteLength)\n    message[0] = MESSAGE_TYPE_STREAM_DATA\n    message[1] = streamId \n    message.set(data, signallingLength)\n    this._send(message)\n  }\n\n  _terminateSender(streamId) {\n    // TODO: properly terminate upstream when terminate called on local end\n    //console.log(\"terminate send stream: \" + streamId)\n  }\n\n  _terminateReceiver(streamId) {\n    const message = new Uint8Array(2)\n    message[0] = MESSAGE_TYPE_TERMINATE_SENDER\n    message[1] = streamId\n\n    this._send(message)\n  }\n\n  _parseMessage(rawMessage) {\n    return message\n  }\n\n  _isLocalStream(streamId) {\n    return this._senders[streamId] !== undefined\n  }\n}\n\n\n\n\n\n//# sourceURL=webpack://fibridge/./node_modules/omnistreams/src/multiplexer.mjs?");

/***/ }),

/***/ "./node_modules/omnistreams/src/mux_receiver.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/omnistreams/src/mux_receiver.mjs ***!
  \*******************************************************/
/*! exports provided: MuxReceiver */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MuxReceiver\", function() { return MuxReceiver; });\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.mjs */ \"./node_modules/omnistreams/src/core.mjs\");\n\n\nclass MuxReceiver extends _core_mjs__WEBPACK_IMPORTED_MODULE_0__[\"Producer\"] {\n\n  constructor({ requestFunc, terminateFunc }) {\n    super()\n\n    this._request = requestFunc\n    this._upstreamTerminate = terminateFunc\n    this._totalBytesReceived = 0\n    this._buffer = new Uint8Array(2*1024*1024)\n    this._offset = 0\n  }\n\n  _demandChanged(numElements) {\n    if (this._terminated) {\n      return\n    }\n\n    this._request(numElements)\n  }\n\n  stop() {\n    this._endCallback()\n  }\n\n  receive(data) {\n    if (this._terminated) {\n      return\n    }\n\n    this._dataCallback(data)\n  }\n\n  _terminate() {\n    this._upstreamTerminate()\n  }\n}\n\n\n\n\n//# sourceURL=webpack://fibridge/./node_modules/omnistreams/src/mux_receiver.mjs?");

/***/ }),

/***/ "./node_modules/omnistreams/src/mux_sender.mjs":
/*!*****************************************************!*\
  !*** ./node_modules/omnistreams/src/mux_sender.mjs ***!
  \*****************************************************/
/*! exports provided: MuxSender */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MuxSender\", function() { return MuxSender; });\n/* harmony import */ var _core_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.mjs */ \"./node_modules/omnistreams/src/core.mjs\");\n\n\n\nclass MuxSender extends _core_mjs__WEBPACK_IMPORTED_MODULE_0__[\"Consumer\"] {\n  constructor({ sendFunc, endFunc, terminateFunc }) {\n    super()\n\n    this._send = sendFunc\n    this._endUpstream = endFunc\n    this._terminateUpstream = terminateFunc\n  }\n\n  _write(data) {\n    if (this._finished) {\n      return\n    }\n\n    data = new Uint8Array(data)\n    this.send(data)\n  }\n\n  _end() {\n    this._finished = true\n    this._endUpstream()\n    this._endCallback()\n  }\n\n  send(data) {\n    const array = new Uint8Array(data)\n\n    this._send(array)\n  }\n\n  _terminate() {\n    this._terminateUpstream()\n  }\n\n  //stop() {\n  //  this._terminateCallback()\n  //}\n\n  onFlushed(callback) {\n    this._onFlushed = callback\n  }\n}\n\n\n\n\n\n//# sourceURL=webpack://fibridge/./node_modules/omnistreams/src/mux_sender.mjs?");

/***/ }),

/***/ "./node_modules/omnistreams/src/transport.mjs":
/*!****************************************************!*\
  !*** ./node_modules/omnistreams/src/transport.mjs ***!
  \****************************************************/
/*! exports provided: initiateWebSocketMux */
/***/ (function(__webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initiateWebSocketMux\", function() { return initiateWebSocketMux; });\n/* harmony import */ var _multiplexer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./multiplexer.mjs */ \"./node_modules/omnistreams/src/multiplexer.mjs\");\n\n\n\nclass WebSocketTransport {\n  constructor(ws) {\n    this._ws = ws;\n\n    this._ws.binaryType = 'arraybuffer';\n\n    this._ws.addEventListener('message', (message) => {\n      if (this._messageCallback) {\n        this._messageCallback(message.data);\n      }\n    });\n  }\n\n  send(message) {\n    this._ws.send(message);\n  }\n\n  onMessage(callback) {\n    this._messageCallback = callback;\n  }\n}\n\n\nasync function initiateWebSocketMux(options) {\n\n  const address = options && options.address ? options.address : '127.0.0.1';\n  const port = options && options.port ? options.port : 9001;\n  const secure = options && options.secure ? options.secure : false;\n\n  let wsProtoStr;\n  if (secure) {\n    wsProtoStr = 'wss:';\n  }\n  else {\n    wsProtoStr = 'ws:';\n  }\n\n  const wsString = `${wsProtoStr}//${address}:${port}/omnistreams`\n  const ws = new WebSocket(wsString);\n  const transport = new WebSocketTransport(ws);\n\n  return new Promise((resolve, reject) => {\n    ws.addEventListener('open', () => {\n      resolve(new _multiplexer_mjs__WEBPACK_IMPORTED_MODULE_0__[\"Multiplexer\"](transport));\n    })\n  });\n}\n\n\n\n\n//# sourceURL=webpack://fibridge/./node_modules/omnistreams/src/transport.mjs?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: createHoster */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createHoster\", function() { return createHoster; });\n/* harmony import */ var omnistreams__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! omnistreams */ \"./node_modules/omnistreams/index.mjs\");\n/* harmony import */ var omnistreams_filereader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! omnistreams-filereader */ \"./node_modules/omnistreams-filereader/index.mjs\");\n\n\n\n\nconst JSON_RPC_SERVER_ERROR_NOT_FOUND = -32000;\n\nclass Hoster {\n\n  constructor({ proxyAddress, port, secure, chunkSize, openRangedChunkSize }, readyCallback) {\n\n    this._readyCallback = readyCallback;\n    this._files = {};\n\n    // Open ranged requests are sometimes terminated early, after the receiver\n    // gets what they're looking for, so chunkSize is smaller by default.\n    this._chunkSize = chunkSize ? chunkSize : 256*1024; //*1024;\n    this._openRangedChunkSize = openRangedChunkSize ? openRangedChunkSize : 64*1024;\n\n    this._wsProtoStr = secure ? 'wss:' : 'ws:';\n\n    if (this.isDefaultPort(port)) {\n      this._portStr = \"\";\n    }\n    else {\n      this._portStr = ':' + port;\n    }\n\n    Object(omnistreams__WEBPACK_IMPORTED_MODULE_0__[\"initiateWebSocketMux\"])({ address: proxyAddress, port, secure })\n    .then((mux) => {\n\n      this._mux = mux;\n\n      mux.onControlMessage((rawMessage) => {\n        const message = Object(omnistreams__WEBPACK_IMPORTED_MODULE_0__[\"decodeObject\"])(rawMessage)\n        this.onMessage(message)\n      });\n\n      // Send a keep-alive every 30 seconds\n      setInterval(() => {\n        mux.sendControlMessage(Object(omnistreams__WEBPACK_IMPORTED_MODULE_0__[\"encodeObject\"])({\n          type: 'keep-alive',\n        }))\n      }, 30000)\n    });\n  }\n\n  onMessage(message) {\n\n    const rpc = message;\n    switch (rpc.method) {\n      case 'setId':\n        this._id = rpc.params;\n        this._readyCallback(this);\n        break;\n      case 'getFile':\n        if (this._files[rpc.params.path] !== undefined) {\n\n          const fullFile = this._files[rpc.params.path];\n\n          let file = fullFile;\n\n          //console.log(`read file: ${message.url}`);\n\n          let chunkSize = this._chunkSize;\n\n          if (rpc.params.range) {\n\n            //console.log(message.range, file.size);\n            if (rpc.params.range.end !== undefined) {\n              file = file.slice(rpc.params.range.start, rpc.params.range.end);\n            }\n            else {\n              file = file.slice(rpc.params.range.start);\n              \n              chunkSize = this._openRangedChunkSize;\n            }\n          }\n\n          //const fileStream = fileReaderStream(file);\n          const rpcResponse = {\n            jsonrpc: '2.0',\n            result: {\n              size: fullFile.size,\n              range: rpc.params.range,\n            },\n            id: rpc.id,\n          };\n\n          const fileStream = new omnistreams_filereader__WEBPACK_IMPORTED_MODULE_1__[\"FileReadProducer\"](file, { chunkSize })\n          const sendStream = this._mux.createConduit(Object(omnistreams__WEBPACK_IMPORTED_MODULE_0__[\"encodeObject\"])(rpcResponse));\n\n          fileStream.pipe(sendStream)\n\n          fileStream.onTermination(() => {\n          })\n        }\n        else {\n          //console.log(`File ${message.url} not found`);\n          this._mux.sendControlMessage(Object(omnistreams__WEBPACK_IMPORTED_MODULE_0__[\"encodeObject\"])({\n            jsonrpc: '2.0',\n            error: {\n              code: JSON_RPC_SERVER_ERROR_NOT_FOUND,\n              message: \"File not found\",\n            },\n            id: rpc.id,\n          }))\n        }\n        break;\n      default:\n        throw new Error(\"Invalid method: \" + rpc.method);\n        break;\n    }\n  }\n\n  hostFile({ path, file }) {\n    this._files[path] = file;\n  }\n\n  getHostedPath(url) {\n    if (this._files[url]) {\n      return '/' + this._id + url;\n    }\n    else {\n      throw \"No file hosted at: \" + url;\n    }\n  }\n\n  getPortStr() {\n    return this._portStr;\n  }\n\n  isDefaultPort(port) {\n    if ((this._wsProtoStr === 'ws:' && port === 80) ||\n        (this._wsProtoStr === 'wss:' && port === 443)) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n}\n\nfunction createHoster(options) {\n  return new Promise((resolve, reject) => {\n    new Hoster(options, function ready(hoster) {\n      resolve(hoster);\n    });\n  });\n}\n\n\n\n\n//# sourceURL=webpack://fibridge/./src/index.js?");

/***/ })

/******/ });
});